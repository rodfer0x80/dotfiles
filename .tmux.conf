 # vi controls
setw -g mode-keys vi
 
# rebind Ctrl+B to Ctrl+A
unbind C-b
set-option -g prefix C-a
bind-key C-a last-window

bind-key -n C-k select-pane -R
bind-key -n C-j select-pane -D

# Resize on ; ' # [
bind-key -n C-l resize-pane -L
bind-key -n C-r resize-pane -R
bind-key -n C-d resize-pane -D
bind-key -n C-u resize-pane -U

# use zsh
set-option -g default-shell /usr/bin/zsh

# Start numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

set-option -g history-limit 200000

# for neovim
set -g default-terminal "screen-256color"

# Display tmux messages for 4 seconds
set -g display-time 4000

# Set status bar
set -g status-bg "#ffa000"

# Enable focus events so that vim can detect focus
set -g focus-events on

# title
# set -g set-titles on
# set -g set-titles-string "#A"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Custom status bar
# Powerline symbols:        
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-left '#[fg=#ffffff,bg=#ffa000,nobold]'
#set -g status-left '#[fg=#ffffff,bg=#ffa000,nobold]'

set -g status-right '#[fg=#ffffff] #S #[fg=colour237]#[fg=colour247,bg=colour237] #(date +"%a") %d %b %R #[fg=colour16,bg=colour247,bold] #h '

#set -g window-status-format "#[fg=#ffffff,bg=#ffa000]   #I #W  #[fg=#ffa000, bg=#ffa000]"
set -g window-status-format "#[fg=#ffffff,bg=#ffa000]   #I #W  #[fg=#ffa000, bg=#ffa000]|"

#set -g window-status-current-format "#[fg=#ffffff,bg=#ffa000]#[fg=#ffffff,bg=#ffa000,noreverse,bold] #I  #W #[fg=#ffa000,bg=#ffffff,nobold]"
set -g window-status-current-format "#[fg=#ffffff,bg=#ffa000]#[fg=#ffffff,bg=#ffa000,noreverse,bold] #I  #W #[fg=#ffffff,bg=#ffa000,nobold]"

set-option -g allow-rename off

# Session name in status bar
# set-window-option -g status-left " #S "

set-window-option -g mode-keys vi

# if run as "tmux attach", create a session if one does not already exist
# new-session -n $HOST

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind r source ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# TODO: fix plugins
# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-pain-control'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
#run '~/.tmux/plugins/tpm/tpm'
